#
# HAL config file for 2FOC servo drives over CAN
#

# load/rt rtcan FOC driver on interface 0
loadrt                                  hal_zed_can rtcan_ifn=0,1,2 #,3
# send rtCAN messages on periodic base
addf hal_zed_can.rtcan_periodic_send    servo-thread

# E-Stop connection to 2FOC boards
net estop                               => hal_zed_can.0.estop
net estop                               => hal_zed_can.1.estop
net estop                               => hal_zed_can.2.estop
#net estop                             	 => hal_zed_can.3.estop

# drive enable button from Axis
net driven                              <= halui.machine.is-on
# drive enable to 2FOC boards
net driven                              => hal_zed_can.0.driven
net driven                              => hal_zed_can.1.driven
net driven                              => hal_zed_can.2.driven
#net driven                              => hal_zed_can.3.driven

# Transform encoder counts in position in mm from reduction parameters 
loadrt                                  posfromenc count=[TRAJ]AXES
# axis reduction parameters
setp posfromenc.0.screwgear             [AXIS_0]SCREW_GEAR
setp posfromenc.1.screwgear             [AXIS_1]SCREW_GEAR
setp posfromenc.2.screwgear             [AXIS_2]SCREW_GEAR
#setp posfromenc.3.screwgear             [AXIS_3]SCREW_GEAR

setp posfromenc.0.motorgear             [AXIS_0]MOTOR_GEAR
setp posfromenc.1.motorgear             [AXIS_1]MOTOR_GEAR
setp posfromenc.2.motorgear             [AXIS_2]MOTOR_GEAR
#setp posfromenc.3.motorgear             [AXIS_3]MOTOR_GEAR

setp posfromenc.0.screw                 [AXIS_0]SCREW_RATIO
setp posfromenc.1.screw                 [AXIS_1]SCREW_RATIO
setp posfromenc.2.screw                 [AXIS_2]SCREW_RATIO
#setp posfromenc.3.screw                 [AXIS_3]SCREW_RATIO

addf posfromenc.0.compute               servo-thread
addf posfromenc.1.compute               servo-thread
addf posfromenc.2.compute               servo-thread
#addf posfromenc.3.compute               servo-thread

#  Transform encoder counts from 2FOC in position mm
net encountX                            <= hal_zed_can.0.feedback
net encountY                            <= hal_zed_can.1.feedback
net encountZ                            <= hal_zed_can.2.feedback
#net encountA                            <= hal_zed_can.3.feedback

net encountX                            => posfromenc.0.encoder
net encountY                            => posfromenc.1.encoder
net encountZ                            => posfromenc.2.encoder
#net encountA                            => posfromenc.3.encoder

net fpositX                             <= posfromenc.0.position
net fpositY                             <= posfromenc.1.position
net fpositZ                             <= posfromenc.2.position
#net fpositA                             <= posfromenc.3.position
