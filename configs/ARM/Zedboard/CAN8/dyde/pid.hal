#
# HAL config file for position pid
#

# load PID module, for position loops
loadrt                                  pid num_chan=[TRAJ]AXES
addf pid.0.do-pid-calcs                 servo-thread
addf pid.1.do-pid-calcs                 servo-thread
addf pid.2.do-pid-calcs                 servo-thread
addf pid.3.do-pid-calcs                 servo-thread
addf pid.4.do-pid-calcs                 servo-thread
addf pid.5.do-pid-calcs                 servo-thread

# PID parameters from the ini
setp pid.0.Pgain                        [AXIS_0]P
setp pid.0.Igain                        [AXIS_0]I
setp pid.0.Dgain                        [AXIS_0]D
setp pid.0.bias                         [AXIS_0]BIAS
setp pid.0.FF0                          [AXIS_0]FF0
setp pid.0.FF1                          [AXIS_0]FF1
setp pid.0.FF2                          [AXIS_0]FF2
setp pid.0.deadband                     [AXIS_0]DEADBAND
# PID parameters from the ini
setp pid.1.Pgain                        [AXIS_1]P
setp pid.1.Igain                        [AXIS_1]I
setp pid.1.Dgain                        [AXIS_1]D
setp pid.1.bias                         [AXIS_1]BIAS
setp pid.1.FF0                          [AXIS_1]FF0
setp pid.1.FF1                          [AXIS_1]FF1
setp pid.1.FF2                          [AXIS_1]FF2
setp pid.1.deadband                     [AXIS_1]DEADBAND
# PID parameters from the ini
setp pid.2.Pgain                        [AXIS_3]P
setp pid.2.Igain                        [AXIS_3]I
setp pid.2.Dgain                        [AXIS_3]D
setp pid.2.bias                         [AXIS_3]BIAS
setp pid.2.FF0                          [AXIS_3]FF0
setp pid.2.FF1                          [AXIS_3]FF1
setp pid.2.FF2                          [AXIS_3]FF2
setp pid.2.deadband                     [AXIS_3]DEADBAND
# PID parameters from the ini
setp pid.3.Pgain                        [AXIS_4]P
setp pid.3.Igain                        [AXIS_4]I
setp pid.3.Dgain                        [AXIS_4]D
setp pid.3.bias                         [AXIS_4]BIAS
setp pid.3.FF0                          [AXIS_4]FF0
setp pid.3.FF1                          [AXIS_4]FF1
setp pid.3.FF2                          [AXIS_4]FF2
setp pid.3.deadband                     [AXIS_4]DEADBAND
# PID parameters from the ini
setp pid.4.Pgain                        [AXIS_6]P
setp pid.4.Igain                        [AXIS_6]I
setp pid.4.Dgain                        [AXIS_6]D
setp pid.4.bias                         [AXIS_6]BIAS
setp pid.4.FF0                          [AXIS_6]FF0
setp pid.4.FF1                          [AXIS_6]FF1
setp pid.4.FF2                          [AXIS_6]FF2
setp pid.4.deadband                     [AXIS_6]DEADBAND
# PID parameters from the ini
setp pid.5.Pgain                        [AXIS_7]P
setp pid.5.Igain                        [AXIS_7]I
setp pid.5.Dgain                        [AXIS_7]D
setp pid.5.bias                         [AXIS_7]BIAS
setp pid.5.FF0                          [AXIS_7]FF0
setp pid.5.FF1                          [AXIS_7]FF1
setp pid.5.FF2                          [AXIS_7]FF2
setp pid.5.deadband                     [AXIS_7]DEADBAND

# connect position target from Axis to PID input 
net Xpos-cmd                            <= axis.0.motor-pos-cmd
net Ypos-cmd                            <= axis.1.motor-pos-cmd
net Apos-cmd                            <= axis.3.motor-pos-cmd
net Bpos-cmd                            <= axis.4.motor-pos-cmd
net Upos-cmd                            <= axis.6.motor-pos-cmd
net Vpos-cmd                            <= axis.7.motor-pos-cmd

# connect position target from Axis to PID input 
net Xpos-cmd                            => pid.0.command
net Ypos-cmd                            => pid.1.command
net Apos-cmd                            => pid.2.command
net Bpos-cmd                            => pid.3.command
net Upos-cmd                            => pid.4.command
net Vpos-cmd                            => pid.5.command

# connect position feedback from 2FOC to PID 
net fpositX                             => pid.0.feedback
net fpositY                             => pid.1.feedback
net fpositA                             => pid.2.feedback
net fpositB                             => pid.3.feedback
net fpositU                             => pid.4.feedback
net fpositV                             => pid.5.feedback

# position is also sent to Axis for visualization
net fpositX                             => axis.0.motor-pos-fb
net fpositY                             => axis.1.motor-pos-fb
net fpositA                             => axis.3.motor-pos-fb
net fpositB                             => axis.4.motor-pos-fb
net fpositU                             => axis.6.motor-pos-fb
net fpositV                             => axis.7.motor-pos-fb

# PID output converted to s32 is sent as setpoint to 2FOC
net PIDoutX                             <= pid.0.output
net PIDoutY                             <= pid.1.output
net PIDoutA                             <= pid.2.output
net PIDoutB                             <= pid.3.output
net PIDoutU                             <= pid.4.output
net PIDoutV                             <= pid.5.output

# convert PID output in s32 and send it as setpoint to 2FOC
loadrt                                  conv_float_s32 count=[TRAJ]AXES

addf                                    conv-float-s32.0 servo-thread
addf                                    conv-float-s32.1 servo-thread
addf                                    conv-float-s32.2 servo-thread
addf                                    conv-float-s32.3 servo-thread
addf                                    conv-float-s32.4 servo-thread
addf                                    conv-float-s32.5 servo-thread

net PIDoutX                             => conv-float-s32.0.in
net PIDoutY                             => conv-float-s32.1.in
net PIDoutA                             => conv-float-s32.2.in
net PIDoutB                             => conv-float-s32.3.in
net PIDoutU                             => conv-float-s32.4.in
net PIDoutV                             => conv-float-s32.5.in

net s32PIDoutX                          <= conv-float-s32.0.out
net s32PIDoutY                          <= conv-float-s32.1.out
net s32PIDoutA                          <= conv-float-s32.2.out
net s32PIDoutB                          <= conv-float-s32.3.out
net s32PIDoutU                          <= conv-float-s32.4.out
net s32PIDoutV                          <= conv-float-s32.5.out

net s32PIDoutX                          => hal_zed_can.0.setpoint
net s32PIDoutY                          => hal_zed_can.1.setpoint
net s32PIDoutA                          => hal_zed_can.2.setpoint
net s32PIDoutB                          => hal_zed_can.3.setpoint
net s32PIDoutU                          => hal_zed_can.4.setpoint
net s32PIDoutV                          => hal_zed_can.5.setpoint

# Axis enables position control
net PIDenable                           <= axis.0.amp-enable-out
net PIDenable                           => pid.0.enable
net PIDenable                           => pid.1.enable
net PIDenable                           => pid.2.enable
net PIDenable                           => pid.3.enable
net PIDenable                           => pid.4.enable
net PIDenable                           => pid.5.enable

